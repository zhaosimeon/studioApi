{"version":3,"sources":["logo.svg","Posts/EditPost.js","Posts/Post.js","Posts/AllPost.js","Posts/PostForm.js","ReactDefault.js","App.js","reducers/postReducer.js","ApiSave.js","index.js"],"names":["module","exports","EditPost","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","state","title","data","author","message","dispatch","type","id","post","onSubmit","this","required","onChange","placeholder","rows","cols","Component","connect","Post","lassName","className","onClick","AllPost","posts","map","editing","key","PostForm","Date","ReactDefault","Fragment","src","logo","alt","href","rel","App","api","baseurl","retrieveAll","a","axios","get","res","update","put","insert","ApiSave","postReducer","action","concat","filter","foundPost","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.072af5f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","//EDIT POST\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass EditPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: props.post.title,\r\n            author: props.post.author,\r\n            message: props.post.message\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { title, author, message } = this.state;\r\n        const data = {\r\n            author,\r\n            title,\r\n            message\r\n        }\r\n        this.props.dispatch({\r\n            type: 'UPDATE_POST',\r\n            id: this.props.post.id,\r\n            data\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input name=\"author\" required type=\"text\" value={this.state.author} onChange={this.handleChange}\r\n                        placeholder=\"Enter Post Author\" />\r\n                    <br /><br />\r\n                    <input name=\"title\" required type=\"text\" value={this.state.title} onChange={this.handleChange}\r\n                        placeholder=\"Enter Post Title\" />\r\n                    <br /><br />\r\n                    <textarea name=\"message\" required rows=\"5\" value={this.state.message} onChange={this.handleChange}\r\n                        cols=\"28\" placeholder=\"Enter Post\" />\r\n                    <br /><br />\r\n                    <button>Update Post</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(EditPost);","//DISPAY/view A POST\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Post extends Component {\r\n    render() {\r\n        return (<div lassName=\"post\" >\r\n            <h2 className=\"post_author\" > {this.props.post.author} </h2>\r\n            <h2 className=\"post_title\" > {this.props.post.title} </h2>\r\n            <p className=\"post_message\" > {this.props.post.message} </p>\r\n            <button className=\"edit\"\r\n                onClick={\r\n                    () => this.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id })} > Edit </button>\r\n            <button className=\"delete\"\r\n                onClick={\r\n                    () => this.props.dispatch({ type: 'DELETE_POST', id: this.props.post.id })} > Delete </button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Post);","//LIST POSTS\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditPost from './EditPost'\r\nimport Post from './Post';\r\nclass AllPost extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <h1 className=\"navbar\">All Posts</h1>\r\n                {this.props.posts.map(\r\n                    (post) => (\r\n                    <div>\r\n                        {post.editing ? <EditPost post={post} key={post.id} /> :\r\n                            <Post key={post.id} post={post} />}\r\n                    </div>)\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AllPost);\r\n","//ADD NEW POST\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            author: '',\r\n            message: ''\r\n        };\r\n    }\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { title, author, message } = this.state;        \r\n        const data = {\r\n            id: new Date(),\r\n            author,\r\n            title,\r\n            message,\r\n            editing: false\r\n        }\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_POST',\r\n            data\r\n        });\r\n        this.setState({ author: '', title: '', message: '' });\r\n    }\r\n    render() {\r\n        return (<div >\r\n            <h1 > Create Post </h1> <form onSubmit={this.handleSubmit} >\r\n                <input name=\"author\"\r\n                    required type=\"text\"\r\n                    value={this.state.author}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter Post Author\" />\r\n                <br /> < br />\r\n                <input name=\"title\"\r\n                    required type=\"text\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter Post Title\" />\r\n                <br /> < br />\r\n                <textarea required rows=\"5\" cols=\"28\"                \r\n                    name=\"message\" value={this.state.message}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter Post Message\" />\r\n                <br /> < br />\r\n                <button > Post </button> </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(PostForm);","import React from 'react';\r\nimport logo from './logo.svg';\r\nexport default function ReactDefault() {\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"App-header\" >\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit < code > src / App.js </code> and save to reload. </p>\r\n                <a className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\" >\r\n                    Learn React </a>\r\n            </header>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AllPost from './Posts/AllPost';\r\nimport PostForm from './Posts/PostForm';\r\nimport ReactDefualt from './ReactDefault';\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"navbar\" >\r\n                    <h2 className=\"center\" > Post It </h2>\r\n                    <PostForm />\r\n                    <AllPost />\r\n                </div>\r\n                <ReactDefualt />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import ApiSave from '../ApiSave';\r\nconst api = ApiSave();\r\nconst postReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            api.insert(action.data);\r\n            return state.concat([action.data]);\r\n        case 'DELETE_POST':\r\n            return state.filter((post) => post.id !== action.id);\r\n        case 'EDIT_POST':\r\n            //return state.map((post) => { post.editing = (post.id === action.id) ? !post.editing : post.editing; return post });\r\n            return state.map((post) => post.id === action.id ? { ...post, editing: !post.editing } : post);\r\n        case 'UPDATE_POST':\r\n            return state.map((post) => {\r\n                if (post.id === action.id) {\r\n                    const foundPost ={\r\n                        id: action.id,\r\n                        author: action.data.author,\r\n                        title: action.data.title,\r\n                        message: action.data.message,\r\n                        editing: !post.editing\r\n                    };\r\n                    api.update(foundPost);\r\n                    return foundPost;\r\n                } else return post;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default postReducer;","import axios from 'axios';\r\nconst ApiSave = () => {\r\n    const baseurl = 'http://localhost:8080';\r\n    \r\n    const retrieveAll = async () => {\r\n        const res = await axios.get(`${baseurl}/posts`);\r\n        return res.data;\r\n    };\r\n\r\n    const update = async (post) => {\r\n        const res = await axios.put(`${baseurl}/posts/${post.id}`, post);\r\n        return res.data;\r\n    };\r\n\r\n    const insert = async (post) => {\r\n        const res = await axios.post(`${baseurl}/posts`, post);\r\n        return res.data;\r\n    };\r\n    return {\r\n        retrieveAll: retrieveAll,\r\n        update: update,\r\n        insert: insert\r\n    }\r\n\r\n};\r\n\r\nexport default ApiSave;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport postReducer from './reducers/postReducer';\r\nimport { Provider } from 'react-redux';\r\n//import thunk from 'redux-thunk';\r\n\r\nconst store = createStore(postReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}